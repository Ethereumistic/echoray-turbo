// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

// This is a stub model.
// Delete it and add your own Prisma models.
model Page {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
}

model User {
  id              String           @id @unique
  email           String           @unique
  name            String?
  surveyResponses SurveyResponse[]
  qrCodes         QrCode[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}

model SurveyResponse {
  id         String   @id @default(cuid())
  user       User?    @relation(fields: [userId], references: [id])
  userId     String
  surveyType String[] // ["websites", "intelligence", "video"]

  // Generic fields applicable to all survey types
  projectPurpose String?
  features       String[]
  priorities     String[]
  businessGoals  String?
  competitors    String[]
  timeline       String?
  budget         String?
  additionalInfo String?

  // Website-specific fields
  websiteType String? // "e-commerce", "portfolio", "blog", "corporate", etc.
  designStyle String? // "modern", "minimalist", "corporate", "creative", etc.
  platforms   String[] // ["web", "mobile", "responsive"]

  // Intelligence/AI-specific fields
  aiUseCase    String? // "automation", "analysis", "chatbot", "recommendation", etc.
  dataTypes    String[] // ["text", "images", "video", "audio", "structured"]
  integrations String[] // ["api", "database", "crm", "analytics"]

  // Video-specific fields
  videoType     String? // "promotional", "educational", "entertainment", "documentary", etc.
  videoDuration String? // "short-form", "medium-form", "long-form"
  videoStyle    String? // "animated", "live-action", "motion-graphics", "mixed"
  deliverables  String[] // ["script", "storyboard", "editing", "effects", "voiceover"]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model QrCode {
  id     String  @id @default(cuid())
  user   User?   @relation(fields: [userId], references: [id])
  userId String
  title  String? // Optional title for the QR code
  data   String // The actual data encoded in the QR code (URL, text, etc.)
  qrType String  @default("text") // "url", "text", "email", "phone", "wifi", etc.

  // QR Code settings
  size       Int    @default(200) // Size in pixels
  errorLevel String @default("M") // L, M, Q, H

  // Optional styling (stored as JSON string)
  foregroundColor String? @default("#000000")
  backgroundColor String? @default("#ffffff")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}
